{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the 3MS Documentation","text":"<p>The 3MS is short for MMMS, which stands for Modular Multi Material System</p>"},{"location":"#inspiration","title":"Inspiration","text":"<ul> <li>Prusa MMU1</li> <li>Bambu AMS</li> </ul>"},{"location":"#why-3ms","title":"Why 3MS?","text":"<p>Why use the 3MS when there are many other multi-material systems? </p> <p>Here are a few reasons:</p> <ul> <li>Extremely simple design increases reliability</li> <li>Extensive documentation to help setup, optomize, and troubleshoot</li> <li>No slicer custom G-Code needed</li> <li>Easily expandable to any number of filaments</li> <li>No need to fine tune tip shaping</li> </ul> <p>With that said, there are a few reasons why you might not want to/be able to use the 3MS:</p> <ul> <li>Klipper firmware is a requirement, so Marlin and RRF setups are a no go</li> <li>A strong, dual drive extruder is highly recommended, so budget printers may need to upgrade their extruders first</li> </ul>"},{"location":"#how-it-works","title":"How it works","text":"<p>Here is a example step by step of what goes on during a single 3MS toolchange from T0 to T1:</p> <ol> <li>Tip shaping and filament unload is performed by the slicer</li> <li>The 3MS unloads T0 175mm at 4500mm/min (75mm/s)</li> <li>The 3MS loads T1 200mm at 4500mm/min</li> <li>The 3MS motors are turned off</li> <li>The printer loads the filament to the nozzle</li> </ol>"},{"location":"#what-about-the-3dchameleon","title":"What about the 3DChameleon?","text":"<p>I recently created a klipper plugin for the 3DChameleon after purchasing a unit. I'm sure my Chameleon could have worked if I had tuned it further, but after several months with only partial success, I gave up. I am still open to pull requests for 3dchameleon-klipper, but I won't be able to test it myself anymore.</p>"},{"location":"howto/","title":"How to Use This Documentation","text":"<p>There are certain indications throughout the documentation to help convey important information concisely. To effectively use this documentation, read this page.</p>"},{"location":"howto/#badges","title":"Badges","text":"<p>There are certain badges supported throughout this documentation. Currently, there are:</p> <ul> <li>My Setup (highly recommended)</li> <li>Tested (recommended)</li> <li>Untested (not recommended except for advanced users)</li> </ul> <p>If you see any text colored in one of the colors above, it corresponds to the badge. Example:</p> <p>SKR Mini E3 V2.0</p> <p>means that my setup uses the SKR Mini E3 V2.0</p>"},{"location":"instructions/","title":"Instructions","text":""},{"location":"instructions/#master-instructions","title":"Master Instructions","text":"<p>Due to the modularity of the 3MS, there are many ways to set it up. This guide attempts to encompass all supported ways of setting up the 3MS.</p>"},{"location":"instructions/#basic-steps","title":"Basic Steps","text":"<p>The basic steps this guide will follow are:</p> <ol> <li>Getting a BOM</li> <li>Assembling your 3MS</li> <li>Configuring your 3MS</li> <li>Stepper motor setup</li> <li>Slicer setup</li> <li>First print</li> <li>Troubleshooting</li> </ol>"},{"location":"instructions/#0-explanations","title":"0. Explanations","text":"<p>Before starting the instructions, a basic understanding of how the 3MS works is recommended. There are two types of components in the 3MS:</p> <ul> <li> <p>Controller</p> <p>This controls the stepper motors</p> </li> <li> <p>Filament Units</p> <p>This moves the filament</p> </li> </ul> <p>The number of filaments you will be able to print with is equal to the number of filament units you have. For example, two filament units will let you print with two colors. It is important to note that one filament unit will NOT let you print in multimaterial.</p>"},{"location":"instructions/#05-choosing-your-controller","title":"0.5. Choosing your controller","text":"<p>Info</p> <p>At this time, the only fully supported controller is the SKR Mini E3 V2.0</p> <p>There are many controller options for the 3MS. For each, there are two main deciding factors:</p> <ul> <li>How many filament units does it support?</li> <li>How much does it cost?</li> </ul> <p>Here is a simple table comparing these two factors across all supported controllers:</p> Name Max Filament Units Base cost (no filament units) Cost per filament unit SKR Mini E3 V2 4 $52.40 $20.00 SKR Pico 4 $53.40 $20.00 FYSETC Spyder 8 $59.40 $22.04 SKR 1.4 Turbo 5 $83.40 $20.00 <p>After you have chosen your controller, proceed to step 1.</p>"},{"location":"instructions/#1-getting-a-bom","title":"1. Getting a BOM","text":"<p>After you have chosen the controller you want to use, go to BOM to view the bill of materials for your controller and the number of filament units you want. Example BOM for the SKR Mini E3 V2 and two filament units:</p> Name Price Quantity Link Notes SKR Mini E3 V2 $34.99 1 Amazon Duponts $9.99 1 Amazon These wires are only sufficient to run steppers, not heaters 12V PSU $7.39 1 Amazon This PSU is only sufficient to run steppers, not heaters NEMA17 Stepper Motor $9.99 2 Amazon You can use a pancake stepper if you want, but it will have less torque MK8 Metal Extruder $9.99 2 Amazon Capricorn PTFE Tubing $11.49 1 Amazon You likely won't need this for every unit, as this is usually too long for only one unit"},{"location":"instructions/#2-assembling-your-3ms","title":"2. Assembling your 3MS","text":"<p>An optional board enclosure for the SKR Mini E3 is available here.</p> <p>Additionaly, an optional univeral mount for the MK8 extruder using M3 bolts is available here. If you use this mount, bolt it to your printer's frame/enclosure before continuing. </p> <p>Next, assemble the MK8 extruders onto the NEMA17 motors using the provided instructions that came with them. If you use the mount above, make sure it is in between the MK8 and NEMA17. </p> <p>After that, route the wires from the NEMA17 to the controller board. Follow this table to determine which port to plug the motors into:</p> Filament Unit # Motor Port 0 XM 1 YM 2 ZAM or ZBM 3 E0M <p>Now, grab your 12V PSU and two M-M duponts, one red and one black (M-M means that there is metal coming out of both ends of the cable). Plug the PSU into the wall, but don't plug the screw terminals into the PSU (the screw terminals have green)</p> <ol> <li>Plug the red wire into the positive terminal of the screw termianls</li> <li>Plug the black wire into the negative terminal of the screw terminals</li> <li>Following this image, choose either the DCIN or POWER input </li> <li>Route the two wires inside closest to your chosen input</li> <li>Using the markings on the board, plug the red wire into the positive terminal on the SKR</li> <li>Using the markings on the board, plug the black wire into the negative terminal on the SKR</li> <li>Verify all connections</li> <li>Plug the PSU screw terminals into the PSU wire</li> </ol> <p>If the SKR lights up, you wired it correctly!</p> <p>Finally, plug the SKR into your Klipper host with the blue cable that came with it.</p>"},{"location":"instructions/#3-configuring-your-3ms","title":"3. Configuring your 3MS","text":"<p>After assembling your 3MS, the next step is to configure it. First, make sure it is plugged into your Klipper Host. Run in your terminal:</p> <pre><code>cd ~/klipper\nmake menuconfig\n</code></pre> <p>In the menuconfig, configure it to your controller. Exmaple for the SKR Mini E3 V2:</p> <p>Chip Type: STM32F103</p> <p>Bootloader Offset: 28KiB bootloader</p> <p>Communication Interface: USB</p> <p>GPIO pins to set at startup: <code>!PA14</code></p> <p>Run in your terminal:</p> <pre><code>make clean\nmake\n</code></pre> <p>The <code>klipper.bin</code> file, located in <code>~/klipper/out/klipper.bin</code> needs to be copied to a MicroSD card and renamed to <code>firmware.bin</code> (case-sensitive). Next, unplug the 3MS board from the PSU and your Klipper Host and insert the SD Card. Next, plug in the PSU, THEN the Klipper Host to the 3MS board. The firmware is now flashed.</p> <p>In the terminal, run:</p> <pre><code>ls /dev/serial/by-id/*\n</code></pre> <p>Example output:</p> <pre><code>/dev/serial/by-id/usb-Klipper_stm32f103xe_33FFD1054746333809650557-if00\n/dev/serial/by-id/usb-Prusa_Research__prusa3d.com__Original_Prusa_i3_MK3_xxx-if00\n</code></pre> <p>In this case, the first line is our 3MS, and the second line is our 3D printer. Now that we know the path to the 3MS, copy it.</p>"},{"location":"instructions/#4-stepper-motor-setup","title":"4. Stepper motor setup","text":""},{"location":"instructions/#5-slicer-setup","title":"5. Slicer setup","text":""},{"location":"instructions/#6-first-print","title":"6. First print","text":""},{"location":"instructions/#7-troubleshooting","title":"7. Troubleshooting","text":""},{"location":"macros/","title":"Macros","text":""},{"location":"macros/#mmms-settings","title":"MMMS Settings","text":""},{"location":"macros/#mmms_settings","title":"MMMS_SETTINGS","text":"<p>Loads the default settings for MMMS.</p> <p>Default Settings</p> <pre><code>variable_load_distance: 210\nvariable_unload_distance: 200\nvariable_num_tools: 2\n</code></pre> <p>Example Usage</p> <pre><code>MMMS_SETTINGS\n</code></pre>"},{"location":"macros/#set_mmms_settings","title":"SET_MMMS_SETTINGS","text":"<p>Sets the configuration for MMMS. Allows temporary customization of load and unload distances, and the number of tools.</p> <p>Example Usage</p> <pre><code>SET_MMMS_SETTINGS LOAD_DISTANCE=210 UNLOAD_DISTANCE=200 NUM_TOOLS=2\n</code></pre>"},{"location":"macros/#filament-handling","title":"Filament Handling","text":""},{"location":"macros/#mmms_unload","title":"MMMS_UNLOAD","text":"<p>Unloads filament by a specified distance. If no distance is specified, it uses the default unload distance from <code>MMMS_SETTINGS</code>.</p> <p>Example Usage</p> <pre><code>MMMS_UNLOAD DISTANCE=200\n</code></pre>"},{"location":"macros/#mmms_load","title":"MMMS_LOAD","text":"<p>Loads filament by a specified distance. If no distance is specified, it uses the default load distance from <code>MMMS_SETTINGS</code>.</p> <p>Example Usage</p> <pre><code>MMMS_LOAD DISTANCE=210\n</code></pre>"},{"location":"macros/#check_fsensor","title":"CHECK_FSENSOR","text":"<p>Checks the filament sensor state. Pauses the print if the sensor state does not match the expected value.</p> <p>Example Usage</p> <pre><code>CHECK_FSENSOR V=1\n</code></pre>"},{"location":"macros/#tool-sync","title":"Tool Sync","text":""},{"location":"macros/#set_tool_sync","title":"SET_TOOL_SYNC","text":"<p>Sets the sync state of a tool. Syncs or desyncs the specified tool.</p> <p>Example Usage</p> <pre><code>SET_TOOL_SYNC TOOL=0 SYNC=1\n</code></pre>"},{"location":"macros/#sync_tool","title":"SYNC_TOOL","text":"<p>Syncs the specified tool and desyncs all other tools.</p> <p>Example Usage</p> <pre><code>SYNC_TOOL TOOL=0\n</code></pre>"},{"location":"macros/#desync_tool","title":"DESYNC_TOOL","text":"<p>Desyncs the specified tool.</p> <p>Example Usage</p> <pre><code>DESYNC_TOOL TOOL=0\n</code></pre>"},{"location":"macros/#clear_tool","title":"CLEAR_TOOL","text":"<p>Clears the current tool selection by setting it to -1.</p> <p>Example Usage</p> <pre><code>CLEAR_TOOL\n</code></pre>"},{"location":"macros/#desync_all_tools","title":"DESYNC_ALL_TOOLS","text":"<p>Desyncs all configured tools.</p> <p>Example Usage</p> <pre><code>DESYNC_ALL_TOOLS\n</code></pre>"},{"location":"macros/#print-start-and-end","title":"Print Start and End","text":""},{"location":"macros/#mmms_start","title":"MMMS_START","text":"<p>Starts the print by checking the filament sensor. If filament is detected, the print is paused and the user is notified. Regardless of the filament sensor state, the initial tool is loaded.</p> <p>Example Usage</p> <pre><code>MMMS_START INITIAL_TOOL=0\n</code></pre>"},{"location":"macros/#mmms_end","title":"MMMS_END","text":"<p>Ends the print by unloading the current tool. If filament is detected after unloading, the user is notified.</p> <p>Example Usage</p> <pre><code>MMMS_END\n</code></pre>"},{"location":"macros/#tool-change","title":"Tool Change","text":""},{"location":"macros/#t0","title":"T0","text":"<p>Changes to tool 0.</p> <p>Example Usage</p> <pre><code>T0\n</code></pre>"},{"location":"macros/#t1","title":"T1","text":"<p>Changes to tool 1.</p> <p>Example Usage</p> <pre><code>T1\n</code></pre>"},{"location":"macros/#tx","title":"Tx","text":"<p>Changes to a specified tool. Replace <code>x</code> with the tool number.</p> <p>Example Usage</p> <pre><code>T2\nT3\n</code></pre>"},{"location":"setup/bom/","title":"BOM","text":""},{"location":"setup/bom/#bom","title":"BOM","text":""},{"location":"setup/bom/#number-of-filament-units","title":"Number of filament units","text":"<p>First, choose the number of filament units you want. Each filament unit lets you print with an additional filament. Two filament units are the minimum. You can add or remove filament units after building, but the BOM and configuration will vary based on how many filament units you want.</p>"},{"location":"setup/bom/#controller-boms","title":"Controller BOMs","text":"<p>Choose one of the following Controller BOMs for whatever controller you want:</p> <p>Info</p> <p>At this time, the only fully supported controller is the SKR Mini E3 V2.0</p> BTT SKR Mini E3 V2SKR PicoFYSETC SpyderBTT SKR 1.4 Turbo <p>Max filament units: 4</p> Name Price Quantity Link Notes SKR Mini E3 V2 $34.99 1 Amazon Duponts $9.99 1 Amazon These wires are only sufficient to run steppers, not heaters 12V PSU $7.39 1 Amazon This PSU is only sufficient to run steppers, not heaters <p>Max filament units: 4</p> Name Price Quantity Link Notes SKR Pico $35.99 1 Amazon Duponts $9.99 1 Amazon These wires are only sufficient to run steppers, not heaters 12V PSU $7.39 1 Amazon This PSU is only sufficient to run steppers, not heaters <p>Max filament units: 8</p> Name Price Quantity Link Notes FYSETC Spyder $42.00 1 FYSETC A4988 Stepper Driver $2.04 each # of filament units Amazon Comes in a five pack Duponts $9.99 1 Amazon These wires are only sufficient to run steppers, not heaters 12V PSU $7.39 1 Amazon This PSU is only sufficient to run steppers, not heaters <p>Max filament units: 5</p> Name Price Quantity Link Notes SKR 1.4 Turbo + 5x TMC2209 $58.98 (BTT), $65.99 (Amazon) 1 BTT Amazon Duponts $9.99 1 Amazon These wires are only sufficient to run steppers, not heaters 12V PSU $7.39 1 Amazon This PSU is only sufficient to run steppers, not heaters"},{"location":"setup/bom/#filament-unit-boms","title":"Filament Unit BOMs","text":"<p>For each filament unit, purchase this BOM:</p> Name Quantity Price Link Notes NEMA17 Stepper Motor 1 $9.99 Amazon You can use a pancake stepper if you want, but it will have less torque MK8 Metal Extruder 1 $9.99 Amazon Capricorn PTFE Tubing 1 $11.49 Amazon You likely won't need this for every unit, as this is usually too long for only one unit"},{"location":"setup/configuration/","title":"Configuration","text":""},{"location":"setup/configuration/#configuration","title":"Configuration","text":"<p>Follow this guide to create your 3MS configuration.</p>"},{"location":"setup/configuration/#premade-configurations","title":"Premade Configurations","text":"<p>The easiest way to get a configuration for your 3MS is to download a premade one. Premade configurations are available for the following controllers:</p> <p>Info</p> <p>At this time, the only fully supported controller is the SKR Mini E3 V2.0</p> <ul> <li>BTT SKR 1.4</li> <li>BTT Skr Pico</li> <li>BTT Skr Mini E3 V2.0</li> <li>FYSETC Spyder</li> </ul> <p>If your controller is in the list above, use that configuration and skip the rest of this guide. If you are using a different controller, read on.</p>"},{"location":"setup/configuration/#controller-configuration","title":"Controller Configuration","text":"<p>First, find a configuration that works with your control board. Klipper official configurations: Github</p>"},{"location":"setup/configuration/#3ms-configuration","title":"3MS Configuration","text":"<p>After you have downloaded your controller configuration, create a new folder in the same folder as your <code>printer.cfg</code>. Name it <code>3ms</code>. Inside it, copy and paste your controller configuration. In this example, an SKR Pico configuration will be used.</p>"},{"location":"setup/configuration/#only-motors","title":"Only Motors","text":"<p>First, remove all parts of the configuration not about motors/extruders. Example:</p> Before/After BeforeAfter 3ms/skr-pico.cfg<pre><code># This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0\n# To use this config, the firmware should be compiled for the RP2040 with\n# USB communication.\n\n# The \"make flash\" command does not work on the SKR Pico V1.0. Instead,\n# after running \"make\", copy the generated \"out/klipper.uf2\" file\n# to the mass storage device in RP2040 boot mode\n\n# See docs/Config_Reference.md for a description of parameters.\n\n[stepper_x]\nstep_pin: gpio11\ndir_pin: !gpio10\nenable_pin: !gpio12\nmicrosteps: 16\nrotation_distance: 40\nendstop_pin: ^gpio4\nposition_endstop: 0\nposition_max: 235\nhoming_speed: 50\n\n[tmc2209 stepper_x]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 0\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[stepper_y]\nstep_pin: gpio6\ndir_pin: !gpio5\nenable_pin: !gpio7\nmicrosteps: 16\nrotation_distance: 40\nendstop_pin: ^gpio3\nposition_endstop: 0\nposition_max: 235\nhoming_speed: 50\n\n[tmc2209 stepper_y]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 2\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[stepper_z]\nstep_pin: gpio19\ndir_pin: gpio28\nenable_pin: !gpio2\nmicrosteps: 16\nrotation_distance: 8\nendstop_pin: ^gpio25\nposition_endstop: 0.0\nposition_max: 250\n\n[tmc2209 stepper_z]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 1\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[extruder]\nstep_pin: gpio14\ndir_pin: !gpio13\nenable_pin: !gpio15\nmicrosteps: 16\nrotation_distance: 33.500\nnozzle_diameter: 0.400\nfilament_diameter: 1.750\nheater_pin: gpio23\nsensor_type: EPCOS 100K B57560G104F\nsensor_pin: gpio27\ncontrol: pid\npid_Kp: 21.527\npid_Ki: 1.063\npid_Kd: 108.982\nmin_temp: 0\nmax_temp: 250\n\n[tmc2209 extruder]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 3\nrun_current: 0.650\nstealthchop_threshold: 999999\n\n[heater_bed]\nheater_pin: gpio21\nsensor_type: ATC Semitec 104GT-2\nsensor_pin: gpio26\ncontrol: pid\npid_Kp: 54.027\npid_Ki: 0.770\npid_Kd: 948.182\nmin_temp: 0\nmax_temp: 130\n\n[fan]\npin: gpio17\n\n[heater_fan heatbreak_cooling_fan]\npin: gpio18\n\n[heater_fan controller_fan]\npin: gpio20\n\n[temperature_sensor pico]\nsensor_type: temperature_mcu\n\n[mcu]\nserial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00\n\n[printer]\nkinematics: cartesian\nmax_velocity: 300\nmax_accel: 3000\nmax_z_velocity: 5\nmax_z_accel: 100\n\n[neopixel board_neopixel]\npin: gpio24\nchain_count: 1\ncolor_order: GRB\ninitial_RED: 0.3\ninitial_GREEN: 0.3\ninitial_BLUE: 0.3\n\n#[bltouch]\n#sensor_pin: gpio22\n#control_pin: gpio29\n\n#[filament_switch_sensor runout_sensor]\n#switch_pin: ^gpio16\n</code></pre> 3ms/skr-pico.cfg<pre><code># This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0\n# To use this config, the firmware should be compiled for the RP2040 with\n# USB communication.\n\n# The \"make flash\" command does not work on the SKR Pico V1.0. Instead,\n# after running \"make\", copy the generated \"out/klipper.uf2\" file\n# to the mass storage device in RP2040 boot mode\n\n# See docs/Config_Reference.md for a description of parameters.\n\n[stepper_x]\nstep_pin: gpio11\ndir_pin: !gpio10\nenable_pin: !gpio12\nmicrosteps: 16\nrotation_distance: 40\nendstop_pin: ^gpio4\nposition_endstop: 0\nposition_max: 235\nhoming_speed: 50\n\n[tmc2209 stepper_x]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 0\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[stepper_y]\nstep_pin: gpio6\ndir_pin: !gpio5\nenable_pin: !gpio7\nmicrosteps: 16\nrotation_distance: 40\nendstop_pin: ^gpio3\nposition_endstop: 0\nposition_max: 235\nhoming_speed: 50\n\n[tmc2209 stepper_y]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 2\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[stepper_z]\nstep_pin: gpio19\ndir_pin: gpio28\nenable_pin: !gpio2\nmicrosteps: 16\nrotation_distance: 8\nendstop_pin: ^gpio25\nposition_endstop: 0.0\nposition_max: 250\n\n[tmc2209 stepper_z]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 1\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[extruder]\nstep_pin: gpio14\ndir_pin: !gpio13\nenable_pin: !gpio15\nmicrosteps: 16\nrotation_distance: 33.500\nnozzle_diameter: 0.400\nfilament_diameter: 1.750\nheater_pin: gpio23\nsensor_type: EPCOS 100K B57560G104F\nsensor_pin: gpio27\ncontrol: pid\npid_Kp: 21.527\npid_Ki: 1.063\npid_Kd: 108.982\nmin_temp: 0\nmax_temp: 250\n\n[tmc2209 extruder]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 3\nrun_current: 0.650\nstealthchop_threshold: 999999\n</code></pre>"},{"location":"setup/configuration/#manual-steppers","title":"Manual Steppers","text":"<p>Next, replace all the <code>stepper_</code>,<code>extruder</code>, and <code>tmc...</code> with <code>[manual_stepper 3ms...]</code> sections, as shown below:</p> Before/After BeforeAfter 3ms/generic-bigtreetech-skr-pico-v1.0.cfg<pre><code># This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0\n# To use this config, the firmware should be compiled for the RP2040 with\n# USB communication.\n\n# The \"make flash\" command does not work on the SKR Pico V1.0. Instead,\n# after running \"make\", copy the generated \"out/klipper.uf2\" file\n# to the mass storage device in RP2040 boot mode\n\n# See docs/Config_Reference.md for a description of parameters.\n\n[stepper_x]\nstep_pin: gpio11\ndir_pin: !gpio10\nenable_pin: !gpio12\nmicrosteps: 16\nrotation_distance: 40\nendstop_pin: ^gpio4\nposition_endstop: 0\nposition_max: 235\nhoming_speed: 50\n\n[tmc2209 stepper_x]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 0\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[stepper_y]\nstep_pin: gpio6\ndir_pin: !gpio5\nenable_pin: !gpio7\nmicrosteps: 16\nrotation_distance: 40\nendstop_pin: ^gpio3\nposition_endstop: 0\nposition_max: 235\nhoming_speed: 50\n\n[tmc2209 stepper_y]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 2\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[stepper_z]\nstep_pin: gpio19\ndir_pin: gpio28\nenable_pin: !gpio2\nmicrosteps: 16\nrotation_distance: 8\nendstop_pin: ^gpio25\nposition_endstop: 0.0\nposition_max: 250\n\n[tmc2209 stepper_z]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 1\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[extruder]\nstep_pin: gpio14\ndir_pin: !gpio13\nenable_pin: !gpio15\nmicrosteps: 16\nrotation_distance: 33.500\nnozzle_diameter: 0.400\nfilament_diameter: 1.750\nheater_pin: gpio23\nsensor_type: EPCOS 100K B57560G104F\nsensor_pin: gpio27\ncontrol: pid\npid_Kp: 21.527\npid_Ki: 1.063\npid_Kd: 108.982\nmin_temp: 0\nmax_temp: 250\n\n[tmc2209 extruder]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 3\nrun_current: 0.650\nstealthchop_threshold: 999999\n</code></pre> 3ms/generic-bigtreetech-skr-pico-v1.0.cfg<pre><code># This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0\n# To use this config, the firmware should be compiled for the RP2040 with\n# USB communication.\n\n# The \"make flash\" command does not work on the SKR Pico V1.0. Instead,\n# after running \"make\", copy the generated \"out/klipper.uf2\" file\n# to the mass storage device in RP2040 boot mode\n\n# See docs/Config_Reference.md for a description of parameters.\n\n[manual_stepper 3ms0]\nstep_pin: gpio11\ndir_pin: !gpio10\nenable_pin: !gpio12\nmicrosteps: 16\nrotation_distance: 40\n\n[tmc2209 manual_stepper 3ms0]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 0\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[manual_stepper 3ms1]\nstep_pin: gpio6\ndir_pin: !gpio5\nenable_pin: !gpio7\nmicrosteps: 16\nrotation_distance: 40\n\n[tmc2209 manual_stepper 3ms1]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 2\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[manual_stepper 3ms2]\nstep_pin: gpio19\ndir_pin: gpio28\nenable_pin: !gpio2\nmicrosteps: 16\nrotation_distance: 8\n\n[tmc2209 manual_stepper 3ms2]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 1\nrun_current: 0.580\nstealthchop_threshold: 999999\n\n[manual_stepper 3ms3]\nstep_pin: gpio14\ndir_pin: !gpio13\nenable_pin: !gpio15\nmicrosteps: 16\nrotation_distance: 33.500\n\n[tmc2209 manual_stepper 3ms3]\nuart_pin: gpio9\ntx_pin: gpio8\nuart_address: 3\nrun_current: 0.650\nstealthchop_threshold: 999999\n</code></pre>"},{"location":"setup/configuration/#organization","title":"Organization","text":"<p>Rename your configuration to <code>steppers.cfg</code>. Next, create the following files with these contents:</p> 3ms/main.cfg 3ms/main.cfg<pre><code>[gcode_macro Toolchange]\nvariable_p: -1\ngcode:\n{% set p = printer[\"gcode_macro Toolchange\"].p|int %}\n{% if p &gt; -1 %}\nG100 T{p} E-50 F4500 N0\n{% endif %}\nG100 T{params.T} E55 F4500 N0\nSAVE_GCODE_VARIABLE MACRO=Toolchange VARIABLE=p VALUE={params.T}\n\n[gcode_macro T0]\ngcode:\nToolchange T=0\n\n[gcode_macro T1]\ngcode:\nToolchange T=1\n\n[gcode_macro T2]\ngcode:\n    Toolchange T=2\n\n[gcode_macro T3]\ngcode:\n    Toolchange T=3\n\n[include ./g100.cfg]\n[include ./steppers.cfg]\n</code></pre> 3ms/g100.cfg 3ms/g100.cfg<pre><code>[gcode_macro G100]\ngcode:\n{% set T = params.T|int %}\n{% set E = params.E|default(0)|float %}\n{% set F = params.F|default(3000)|float %}\n{% set N = params.N|default(1)|int %}\n\nMANUAL_STEPPER STEPPER=3ms{T} ENABLE={N} SET_POSITION=0\nMANUAL_STEPPER STEPPER=3ms{T} ENABLE={N} MOVE={E} SPEED={F/60} ACCEL=1000\n</code></pre>"},{"location":"setup/steppers/","title":"Stepper Setup","text":"<p>Follow this guide to calibrate each of the stepper motors.</p>"},{"location":"setup/steppers/#is-the-motor-spinning","title":"Is the motor spinning?","text":"<p>Run this command for each of your filament units, replacing <code>T0</code> with <code>T1</code>, <code>T2</code>, etc.</p> <pre><code>G100 T0 E50 F4500\n</code></pre> <p>If the motor spins, skip to the next step. If not, check your wiring first. If your wiring is fine, go to <code>3ms/steppers.cfg</code>. Locate the section named <code>[manual_stepper 3ms0]</code>, replacing <code>0</code> with the <code>T</code> number of the motor not spinning. In front of the <code>enable_pin</code>, add, an <code>!</code>. If there already is one, remove it. Example:</p> BeforeAfter 3ms/steppers.cfg<pre><code>enable_pin: !arduino: PD7\n</code></pre> 3ms/steppers.cfg<pre><code>enable_pin: arduino: PD7\n</code></pre>"},{"location":"setup/steppers/#is-the-motor-spinning-backwards","title":"Is the motor spinning backwards?","text":"<p>Preload each of the filament units with a piece of scrap filament by pushing the lever to release the tension, inserting filament, then releasing the lever to restore tension. Next, run this command for each of your filament units, replacing <code>T0</code> with <code>T1</code>, <code>T2</code>, etc.</p> <pre><code>G100 T0 E50 F4500\n</code></pre> <p>Note which way the filament moves. If it moves forwards, away from the PTFE coupler, skip to the last step. If it moves backwards, you have two choices:</p> <ul> <li>Switch the motor's wires</li> <li>Invert the pin in the configuration</li> </ul> <p>To invert the pin in the configuration, locate the configuration section for the filament unit spinning backwards, and invert the <code>dir_pin</code>. See the previous section for how to invert the pin.</p>"},{"location":"setup/steppers/#how-far-does-the-filament-move","title":"How far does the filament move?","text":""},{"location":"setup/tableofcontents/","title":"Table of Contents","text":"<ul> <li>BOM</li> <li>Configuration</li> <li>Stepper Setup</li> </ul>"}]}